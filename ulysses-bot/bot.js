const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');
const path = require('path');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
const logFile = path.join(__dirname, 'bot.log');
function log(message) {
  const timestamp = new Date().toISOString();
  const logMessage = `[${timestamp}] ${message}\n`;
  fs.appendFileSync(logFile, logMessage);
  console.log(logMessage);
}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const TOKEN = '7585006393:AAFttPbydsMRVtm6V7g4SixfvjS8pnNY3CU';
const ADMIN_ID = '@GeekLS';
const SUBSCRIPTIONS_FILE = path.join(__dirname, 'subscriptions.json');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å –æ–ø—Ü–∏—è–º–∏
const bot = new TelegramBot(TOKEN, {
  polling: true,
  filepath: false,
  baseApiUrl: 'https://api.telegram.org'
});

// –ê–Ω–∏–º–∞—Ü–∏–∏
const animations = {
  welcome: 'https://media.giphy.com/media/3o7abKhOpu0NwenH3O/giphy.gif',
  movie: 'https://media.giphy.com/media/3o6Zt6ML6BklcajjsA/giphy.gif',
  success: 'https://media.giphy.com/media/XreQmk7ETCak0/giphy.gif',
  error: 'https://media.giphy.com/media/TqiwHbFBaZ4ti/giphy.gif'
};

// –ó–∞–≥—Ä—É–∑–∫–∞/—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–æ–∫
function loadSubscriptions() {
  try {
    if (!fs.existsSync(SUBSCRIPTIONS_FILE)) {
      return new Set();
    }
    const data = fs.readFileSync(SUBSCRIPTIONS_FILE, 'utf8');
    return new Set(JSON.parse(data));
  } catch (err) {
    log(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫: ${err}`);
    return new Set();
  }
}

function saveSubscriptions(subscriptions) {
  try {
    fs.writeFileSync(SUBSCRIPTIONS_FILE, JSON.stringify([...subscriptions]));
  } catch (err) {
    log(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–æ–∫: ${err}`);
  }
}

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Å—Ç—Ä–µ—á–µ
function getMeetingInfo() {
  return {
    date: '13.07.2025',
    time: '15:00',
    place: '–ö–æ—Ñ–µ–π–Ω—è "–¢–æ–º –°–æ–π–µ—Ä", —É–ª. –®–º–∏–¥—Ç–∞, 12',
    film: '¬´Amores perros/–°—É–∫–∞-–ª—é–±–æ–≤—å¬ª (2000)',
    description: '–ñ–∞–Ω—Ä: —Ç—Ä–∏–ª–ª–µ—Ä, –¥—Ä–∞–º–∞, –∫—Ä–∏–º–∏–Ω–∞–ª',
    poster: 'https://sun9-77.userapi.com/s/v1/ig2/Q91kMgxR5t6YrRGSs3bx2uFJjj98U4Gl0JYTY-DWHmJe7gKzIQLw842yglmdJlLcqyWlE_TmHxDCwB8ER5HZPW5G.jpg?quality=95&as=32x44,48x66,72x99,108x148,160x219,240x329,360x494,480x658,540x741,640x878,720x988,729x1000&from=bu&cs=729x0'
  };
}

// –ö—Ä–∞—Å–∏–≤–æ–µ –º–µ–Ω—é
function createMainMenu() {
  return {
    reply_markup: JSON.stringify({
      resize_keyboard: true,
      keyboard: [
        [{ text: 'üçø –ë–ª–∏–∂–∞–π—à–∞—è –≤—Å—Ç—Ä–µ—á–∞' }, { text: 'üìÖ –ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞' }],
        [{ text: '‚ÑπÔ∏è –û –∫–ª—É–±–µ' }, { text: 'üì¢ –ö–æ–Ω—Ç–∞–∫—Ç—ã' }]
      ]
    })
  };
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—Å—Ç—Ä–µ—á–µ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
async function sendMeetingInfo(chatId) {
  const meeting = getMeetingInfo();

  try {
    // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    await bot.sendAnimation(chatId, animations.movie, {
      caption: 'üé¨ –ó–∞–≥—Ä—É–∂–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å—Ç—Ä–µ—á–µ...'
    });

    // –ó–∞—Ç–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `üé¨ <b>–ë–ª–∏–∂–∞–π—à–∞—è –≤—Å—Ç—Ä–µ—á–∞ –∫–∏–Ω–æ-–∫–ª—É–±–∞:</b>\n\n` +
      `üìÖ <b>–î–∞—Ç–∞:</b> ${meeting.date}\n` +
      `‚è∞ <b>–í—Ä–µ–º—è:</b> ${meeting.time}\n` +
      `üìç <b>–ú–µ—Å—Ç–æ:</b> <a href="https://maps.google.com/?q=${encodeURIComponent(meeting.place)}">${meeting.place}</a>\n` +
      `üé• <b>–§–∏–ª—å–º:</b> ${meeting.film}\n` +
      `üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> ${meeting.description}\n\n` +
      `–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º –∑–∞—Ä–∞–Ω–µ–µ!`;

    await bot.sendPhoto(chatId, meeting.poster, {
      caption: message,
      parse_mode: 'HTML',
      ...createMainMenu()
    });
  } catch (err) {
    log(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è ${chatId}: ${err}`);
    await bot.sendAnimation(chatId, animations.error, {
      caption: '–û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
    });
  }
}

// –ö–æ–º–∞–Ω–¥–∞ /start —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
bot.onText(/\/start/, async (msg) => {
  const chatId = msg.chat.id;

  try {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é
    await bot.sendAnimation(chatId, animations.welcome, {
      caption: `–ü—Ä–∏–≤–µ—Ç, ${msg.from.first_name}! üëã\n–Ø –±–æ—Ç –∫–∏–Ω–æ-–∫–ª—É–±–∞ '–û–¥–∏—Å—Å–µ—è'!`
    });

    // –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
    await bot.sendMessage(
      chatId,
      'üé• –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ:\n' +
      '‚Ä¢ –£–∑–Ω–∞—Ç—å –æ –±–ª–∏–∂–∞–π—à–∏—Ö –≤—Å—Ç—Ä–µ—á–∞—Ö\n' +
      '‚Ä¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n' +
      '‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Ñ–∏–ª—å–º–∞—Ö\n\n' +
      '–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:',
      createMainMenu()
    );
  } catch (err) {
    log(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ /start ${chatId}: ${err}`);
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', async (msg) => {
  if (msg.text && !msg.text.startsWith('/')) {
    const chatId = msg.chat.id;

    switch(msg.text) {
      case 'üçø –ë–ª–∏–∂–∞–π—à–∞—è –≤—Å—Ç—Ä–µ—á–∞':
        await sendMeetingInfo(chatId);
        break;
      case 'üìÖ –ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞':
        await showSubscriptionMenu(chatId);
        break;
      case '‚ÑπÔ∏è –û –∫–ª—É–±–µ':
        await sendAboutInfo(chatId);
        break;
      case 'üì¢ –ö–æ–Ω—Ç–∞–∫—Ç—ã':
        await sendContacts(chatId);
        break;
      default:
        await bot.sendMessage(chatId, '–ò—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ üòâ', createMainMenu());
    }
  }
});

// –ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –ø–æ–¥–ø–∏—Å–∫–∏
async function showSubscriptionMenu(chatId) {
  const subscriptions = loadSubscriptions();
  const isSubscribed = subscriptions.has(chatId.toString());

  const keyboard = {
    inline_keyboard: [
      [{
        text: isSubscribed ? '‚ùå –û—Ç–ø–∏—Å–∞—Ç—å—Å—è' : '‚úÖ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è',
        callback_data: isSubscribed ? 'unsubscribe' : 'subscribe'
      }],
      [{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'back_to_main' }]
    ]
  };

  await bot.sendMessage(
    chatId,
    isSubscribed
      ? '–¢—ã –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –æ –≤—Å—Ç—Ä–µ—á–∞—Ö –∫–ª—É–±–∞! üéâ'
      : '–¢—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—Å—Ç—Ä–µ—á–∞—Ö üòî',
    { reply_markup: keyboard }
  );
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
bot.on('callback_query', async (query) => {
  const chatId = query.message.chat.id;
  const subscriptions = loadSubscriptions();

  try {
    switch(query.data) {
      case 'subscribe':
        subscriptions.add(chatId.toString());
        saveSubscriptions(subscriptions);
        await bot.answerCallbackQuery(query.id, { text: '‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å!' });
        await bot.editMessageText('üéâ –¢–µ–ø–µ—Ä—å —Ç—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—Å—Ç—Ä–µ—á–∞—Ö!', {
          chat_id: chatId,
          message_id: query.message.message_id,
          reply_markup: {
            inline_keyboard: [
              [{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'back_to_main' }]
            ]
          }
        });
        break;

      case 'unsubscribe':
        subscriptions.delete(chatId.toString());
        saveSubscriptions(subscriptions);
        await bot.answerCallbackQuery(query.id, { text: '‚ùå –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å' });
        await bot.editMessageText('–¢–µ–ø–µ—Ä—å —Ç—ã –Ω–µ –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è üò¢', {
          chat_id: chatId,
          message_id: query.message.message_id,
          reply_markup: {
            inline_keyboard: [
              [{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'back_to_main' }]
            ]
          }
        });
        break;

      case 'back_to_main':
        await bot.deleteMessage(chatId, query.message.message_id);
        await bot.sendMessage(
          chatId,
          '–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:',
          createMainMenu()
        );
        break;
    }
  } catch (err) {
    log(`–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback ${chatId}: ${err}`);
    await bot.sendAnimation(chatId, animations.error, {
      caption: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞'
    });
  }
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞
bot.onText(/\/notify (.+)/, async (msg, match) => {
  if (msg.from.id.toString() !== ADMIN_ID) {
    return bot.sendMessage(msg.chat.id, 'üö´ –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤');
  }

  const message = match[1];
  const subscriptions = loadSubscriptions();
  let sentCount = 0;

  await bot.sendChatAction(msg.chat.id, 'typing');

  for (const chatId of subscriptions) {
    try {
      await bot.sendMessage(chatId, `üì¢ <b>–í–∞–∂–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ:</b>\n\n${message}\n\n<i>–° –ª—é–±–æ–≤—å—é, –≤–∞—à –∫–∏–Ω–æ-–∫–ª—É–±</i>`, {
        parse_mode: 'HTML'
      });
      sentCount++;
    } catch (err) {
      log(`–û—à–∏–±–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ ${chatId}: ${err}`);
    }
  }

  await bot.sendAnimation(msg.chat.id, animations.success, {
    caption: `‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${sentCount} –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º`
  });
});

// –†–∞—Å—Å—ã–ª–∫–∞ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
setInterval(async () => {
  const subscriptions = loadSubscriptions();

  for (const chatId of subscriptions) {
    try {
      await bot.sendChatAction(chatId, 'upload_photo');
      await sendMeetingInfo(chatId);
    } catch (err) {
      log(`–û—à–∏–±–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ ${chatId}: ${err}`);
    }
  }
}, 7 * 24 * 60 * 60 * 1000); // 1 –Ω–µ–¥–µ–ª—è

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
async function sendAboutInfo(chatId) {
  await bot.sendMessage(
    chatId,
    'üé• <b>–ö–∏–Ω–æ-–∫–ª—É–± "–û–¥–∏—Å—Å–µ—è"</b>\n\n' +
    '–ú—ã —Å–æ–±–∏—Ä–∞–µ–º—Å—è –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é, —á—Ç–æ–±—ã:\n' +
    '‚Ä¢ –°–º–æ—Ç—Ä–µ—Ç—å –¥–æ–º–∞ —Ö–æ—Ä–æ—à–µ–µ –∫–∏–Ω–æ\n' +
    '‚Ä¢ –û–±—Å—É–∂–¥–∞—Ç—å —Ñ–∏–ª—å–º—ã\n' +
    '‚Ä¢ –ó–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞–º–∏\n\n' +
    '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è!',
    { parse_mode: 'HTML', ...createMainMenu() }
  );
}

async function sendContacts(chatId) {
  await bot.sendMessage(
    chatId,
    'üì¨ <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤:</b>\n\n' +
    '‚Ä¢ –ê–¥–º–∏–Ω –±–æ—Ç–∞: @GeekLS\n' +
    '‚Ä¢ –ë–æ—Å—Å: https://vk.com/id8771550\n' +
    '‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: +7 (978)73 63 212\n\n' +
    '–ü–∏—à–∏—Ç–µ –ø–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º!',
    { parse_mode: 'HTML', ...createMainMenu() }
  );
}

log('üé¨ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∫–∏–Ω–æ–º–∞–Ω–∏–∏!');